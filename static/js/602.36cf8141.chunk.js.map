{"version":3,"file":"static/js/602.36cf8141.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage.jsx","service/utils.js"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { fetchMoviesById } from 'service/utils';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nconst Loader = lazy(() => import('../components/Loader/Loader'));\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  console.log(location);\n\n  const refToGoBack = '/movies?input=' + localStorage.getItem('query');\n  console.log(refToGoBack);\n\n  const [moviesFound, setMoviesFound] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (movieId) {\n      setIsLoading(true);\n      fetchMoviesById(movieId)\n        .then(res => {\n          setMoviesFound(res);\n        })\n        .catch(err => {\n          setError(err.message);\n          console.log(error);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [movieId, error]);\n\n  const getYear = date => {\n    if (date) {\n      return date.slice(0, 4);\n    }\n  };\n\n  const getPercentage = score => {\n    if (score) {\n      return `${Math.round(score * 10)}%`;\n    }\n\n    return 'This movie has not been rated yet';\n  };\n\n  const getGenresList = genres => {\n    if (genres && genres.length) {\n      return genres.map(genre => genre.name).join(', ');\n    }\n  };\n\n  const createImageUrl = path => {\n    return `https://image.tmdb.org/t/p/w500${path}`;\n  };\n\n  return (\n    <main>\n      <section>\n        <Suspense>{isLoading && <Loader />}</Suspense>\n        {!isLoading && moviesFound && (\n          <>\n            {\n              <Link to={refToGoBack} className=\"return_button\">\n                Go back\n              </Link>\n            }\n\n            <div className=\"section_container\">\n              <div className=\"image_container\">\n                {moviesFound.backdrop_path && (\n                  <img\n                    src={createImageUrl(moviesFound.backdrop_path)}\n                    alt={moviesFound.title || moviesFound.name}\n                  />\n                )}\n\n                {!moviesFound.backdrop_path && moviesFound.poster_path && (\n                  <img\n                    src={createImageUrl(moviesFound.poster_path)}\n                    alt={moviesFound.title || moviesFound.name}\n                  />\n                )}\n\n                {!moviesFound.backdrop_path && !moviesFound.poster_path && (\n                  <p>Sorry, we were unable to locate to corresponding image</p>\n                )}\n              </div>\n              <div className=\"info_container\">\n                <h1>\n                  {moviesFound.title || moviesFound.name},{' '}\n                  {getYear(moviesFound.release_date)}\n                </h1>\n                {moviesFound.vote_average && (\n                  <p>User Score: {getPercentage(moviesFound.vote_average)}</p>\n                )}\n\n                {!moviesFound.vote_average && (\n                  <p>The movie has not been rated yet.</p>\n                )}\n\n                <h2>Overview</h2>\n                {moviesFound.overview && <p>{moviesFound.overview}</p>}\n                {!moviesFound.overview && (\n                  <p>This movie has not got any overview yet.</p>\n                )}\n\n                <h2>Genres</h2>\n                {moviesFound.genres && (\n                  <p>{getGenresList(moviesFound.genres)}</p>\n                )}\n\n                {moviesFound.genres && moviesFound.genres.length === 0 && (\n                  <p>The movie has not been associated with any genre yet.</p>\n                )}\n              </div>\n            </div>\n            <p>Additional information: </p>\n\n            <Link to=\"cast\" state={{ from: location }}>\n              Cast\n            </Link>\n            <Link to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </Link>\n\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </>\n        )}\n      </section>\n    </main>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '42fa24333ee689285b5f9f8d0d7e86b8';\n\nexport const fetchTrendingMovies = async () => {\n  let result = await axios.get(\n    `${BASE_URL}trending/all/day?language=en-US&api_key=${KEY}`\n  );\n\n  let data = await result.data;\n  return data;\n};\n\nexport const fetchMoviesByQuery = async (query, page) => {\n  let result = await axios.get(\n    `${BASE_URL}search/movie?include_adult=false&language=en-US&api_key=${KEY}&query=${query}&page=${page}`\n  );\n\n  let data = await result.data;\n  return data;\n};\n\nexport const fetchMoviesById = async id => {\n  let result = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  let data = result.data;\n  return data;\n};\n\nexport const fetchCastsByMovieId = async id => {\n  let result = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`);\n\n  let data = result.data;\n  return data;\n};\n\nexport const fetchReviewsByMovieId = async id => {\n  let result = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`);\n\n  let data = result.data;\n  return data;\n};\n"],"names":["Loader","lazy","movieId","useParams","location","useLocation","console","log","refToGoBack","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","moviesFound","setMoviesFound","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchMoviesById","then","res","catch","err","message","finally","score","createImageUrl","path","concat","_jsx","children","_jsxs","Suspense","_Fragment","Link","to","className","backdrop_path","src","alt","title","name","poster_path","date","slice","getYear","release_date","vote_average","Math","round","overview","genres","length","map","genre","join","getGenresList","state","from","Outlet","BASE_URL","KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","data","_context","prev","next","axios","sent","abrupt","stop","apply","arguments","fetchMoviesByQuery","_ref2","_callee2","query","page","_context2","_x","_x2","_ref3","_callee3","id","_context3","_x3","fetchCastsByMovieId","_ref4","_callee4","_context4","_x4","fetchReviewsByMovieId","_ref5","_callee5","_context5","_x5"],"sourceRoot":""}