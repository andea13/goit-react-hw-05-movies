{"version":3,"file":"static/js/797.03f6c420.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx","service/utils.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ moviesFound }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {moviesFound.map(movie => (\n        <Link\n          key={movie.id}\n          to={`/movies/${movie.id}`}\n          state={{ from: location }}\n        >\n          {movie.title && <li>{movie.title}</li>}\n          {movie.name && <li>{movie.name}</li>}\n        </Link>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'service/utils';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [input, setInput] = useState('');\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setError(null);\n\n    if (!input) {\n      setMoviesFound([]);\n    }\n    if (input) {\n      setSearchParams({ input });\n      setIsLoading(true);\n      fetchMoviesByQuery(input, page)\n        .then(res => {\n          const dataArray = res.results;\n          setMoviesFound(prevMoviesFound => [...prevMoviesFound, ...dataArray]);\n        })\n        .catch(err => {\n          setError(err.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [input, page, setSearchParams]);\n\n  useEffect(() => {\n    setInput(searchParams.get('input'));\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setInput(e.target.elements.searchQuery.value.toLowerCase());\n  };\n\n  const onNextPage = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <main>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <input name=\"searchQuery\" />\n            <button type=\"submit\">Search</button>\n          </label>\n        </form>\n\n        {isLoading && <p>Loading...</p>}\n        {error && <p>Error: {error}</p>}\n\n        <MoviesList moviesFound={moviesFound} />\n        {moviesFound.length > 0 && !isLoading && !error && (\n          <button onClick={onNextPage}>Load More</button>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '42fa24333ee689285b5f9f8d0d7e86b8';\n\nexport const fetchTrendingMovies = async () => {\n  let result = await axios.get(\n    `${BASE_URL}trending/all/day?language=en-US&api_key=${KEY}`\n  );\n\n  let data = await result.data;\n  return data;\n};\n\nexport const fetchMoviesByQuery = async (query, page) => {\n  let result = await axios.get(\n    `${BASE_URL}search/movie?include_adult=false&language=en-US&api_key=${KEY}&query=${query}&page=${page}`\n  );\n\n  let data = await result.data;\n  return data;\n};\n\nexport const fetchMoviesById = async id => {\n  let result = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  let data = result.data;\n  return data;\n};\n\nexport const fetchCastsByMovieId = async id => {\n  let result = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`);\n\n  let data = result.data;\n  return data;\n};\n\nexport const fetchReviewsByMovieId = async id => {\n  let result = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`);\n\n  let data = result.data;\n  return data;\n};\n"],"names":["MoviesList","_ref","moviesFound","location","useLocation","_jsx","children","map","movie","_jsxs","Link","to","concat","id","state","from","title","name","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","input","setInput","_useState3","_useState4","setMoviesFound","_useState5","_useState6","page","setPage","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","error","setError","useEffect","fetchMoviesByQuery","then","res","dataArray","results","prevMoviesFound","_toConsumableArray","catch","err","message","finally","get","_Fragment","onSubmit","e","preventDefault","target","elements","searchQuery","value","toLowerCase","type","length","onClick","prevPage","BASE_URL","KEY","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","result","data","_context","prev","next","axios","sent","abrupt","stop","apply","arguments","_ref2","_callee2","query","_context2","_x","_x2","fetchMoviesById","_ref3","_callee3","_context3","_x3","fetchCastsByMovieId","_ref4","_callee4","_context4","_x4","fetchReviewsByMovieId","_ref5","_callee5","_context5","_x5"],"sourceRoot":""}